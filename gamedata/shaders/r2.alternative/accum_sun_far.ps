#include "common.h"
#include "lmodel.h"
#include "shadow.h"

#define SUN_FARPLANE 180.f

#ifdef USE_SUNFILTER
float4 	main		( float2 tc : TEXCOORD0, float4 tcJ : TEXCOORD1, float3 T : TANGENT, float4 color : COLOR0 ) : COLOR
{
  float4 	_P	= tex2D 	(s_position, 	tc);
		_P.w 	= 1.f		;
	float4 	PS	= mul		(m_shadow, 	_P);
#ifdef 	USE_HWSMAP
	half 	s 	= sunmask(_P)*sample_hw	(PS,float4(0,0,0,0) );
#else
	half 	s 	= sunmask(_P)*sample_sw	(PS.xy / PS.w, float2(0,0), PS.z);

#endif
	return 	s	;
	
	// old: 	half 	s 	= sunmask(_P)*shadow_hw_f4	(PS);

}
#else 
float4 	main		( float2 tc : TEXCOORD0, float4 tcJ : TEXCOORD1, float3 T : TANGENT, float4 color : COLOR0 ) : COLOR
{
  float4 _P		= tex2D 	(s_position, 	tc);
  half4  _N		= tex2D 	(s_normal,   	tc);

	// ----- light-model
	half 	m	= xmaterial	;
# ifndef USE_R2_STATIC_SUN
			m 	= _P.w		;
# endif
	half4	light 	= plight_infinity2 (m,_P,_N,Ldynamic_dir,T,color);

	// ----- shadow
  	float4 	P4 	= float4	(_P.x,_P.y,_P.z,1);
	float4 	PS	= mul		(m_shadow, 	P4);
#ifdef	USE_HWSMAP
	#ifdef USE_FETCH4
		half 	s 	= sunmask(P4)*shadow_hw_f4	(PS);
	#else
		half 	s 	= sunmask(P4)*sample_hw_pcf_far	(PS);
	#endif
#else
	half 	s 	= sunmask(P4)*sample_sw	(PS.xy / PS.w, float2(1,0), PS.z);
#endif


#ifdef 	SUN_FARPLANE
	float f		= saturate	(_P.z/SUN_FARPLANE);
	s			= lerp		(s, 0.333h, f*f);
#endif
	half4   ret	= Ldynamic_color * light * s;
	return 		blend		(ret.xyzw, tc);
}
 #endif