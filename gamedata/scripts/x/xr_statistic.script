local killCountProps = {
	neutral_novice = 1, 	neutral_experienced = 2, 	neutral_veteran = 3, 	neutral_master = 4,
	monolith_novice = 1, 	monolith_experienced = 2, 	monolith_veteran = 3, 	monolith_master = 4,
	military_novice = 1, 	military_experienced = 2, 	military_veteran = 3, 	military_master = 4,
	killer_novice = 1, 	killer_experienced = 2, 	killer_veteran = 3, 	killer_master = 4,
	ecolog_novice = 1, 	ecolog_experienced = 2, 	ecolog_veteran = 3, 	ecolog_master = 4,
	dolg_novice = 1, 	dolg_experienced = 2, 		dolg_veteran = 3, 	dolg_master = 4,
	freedom_novice = 1, 	freedom_experienced = 2, 	freedom_veteran = 3, 	freedom_master = 4,
	bandit_novice = 1, 	bandit_experienced = 2, 	bandit_veteran = 3, 	bandit_master = 4,
	zombied_novice = 1, 	zombied_experienced = 2, 	zombied_veteran = 3, 	zombied_master = 4,
	bratok_novice = 1, 	bratok_experienced = 2, 	 bratok_veteran = 3, 	 bratok_master = 4,
	nebo_novice = 1, 	  nebo_experienced = 2, 	 nebo_veteran = 3, 	      nebo_master = 4,
	stranger_novice = 1,  stranger_experienced = 2,  stranger_veteran = 3, 	  stranger_master = 4,
      wanderer_novice = 1,  wanderer_experienced = 2,  wanderer_veteran = 3, 	  wanderer_master = 4,
      ucheniy_novice = 1,   ucheniy_experienced = 2,   ucheniy_veteran = 3, 	  ucheniy_master = 4,
      usa_novice = 1,   usa_experienced = 2,   usa_veteran = 3, 	  usa_master = 4,
      newstalk_novice = 1,  newstalk_experienced = 2,  newstalk_veteran = 3,  newstalk_master = 4,
      hunter_novice = 1,  hunter_experienced = 2,  hunter_veteran = 3,  hunter_master = 4,
      maroder_novice = 1,  maroder_experienced = 2,  maroder_veteran = 3,  maroder_master = 4,
      maroderka_novice = 1,  maroderka_experienced = 2,  maroderka_veteran = 3,  maroderka_master = 4,
	  catcher_novice = 1,  catcher_experienced = 2,  catcher_veteran = 3,  catcher_master = 4,
	
	tushkano_weak = 1, tarakan_strong = 2, 
	flesh_weak = 1, 	flesh_normal = 2, 	flesh_strong = 3,
	boar_weak = 1, 		boar_normal = 2, 	boar_strong = 3,
	cat_weak = 1, cat_blood = 2, cat_black = 3,
	burer_weak = 1, burer_normal = 2, burer_strong = 3,
	fracture_weak = 1, fracture_normal = 2, fracture_strong = 3,
	chimera_weak = 1, chimera_normal = 2, chimera_strong = 3,
	zombie_weak = 1, zombie_normal = 2, zombie_strong = 3,
	dog_weak = 1, 		dog_normal = 2, 	dog_strong = 3, dog_black = 4, 
	pseudodog_weak = 1, 	pseudodog_normal = 2, 	pseudodog_strong = 3,
	psy_dog_weak = 1, 	psy_dog_normal = 2, 	psy_dog_strong = 3,
	snork_weak = 2, 	snork_normal = 3, 	snork_strong = 4,
	poltergeist_weak = 2,
	pseudo_gigant_weak = 4,
	controller_weak = 4,
	bloodsucker_weak = 1, 	bloodsucker_normal = 2, bloodsucker_strong = 3
}

local sect_alias = {	
	tushkano_normal = "tushkano_weak",
	tarakan_normal = "tushkano_weak",
	tushkano_strong = "tushkano_weak",
        wolk = "controller_weak",
	burer_normal = "burer_weak",
	burer_strong = "burer_weak",
	fracture_normal = "fracture_weak",
	fracture_strong = "fracture_weak",
        izlom_strong = "fracture_strong",
        izlom_blue = "fracture_strong",
	cat_normal = "cat_weak",
	cat_strong = "cat_weak",
	chimera_normal = "fracture_weak",
	chimera_strong = "fracture_weak",
	poltergeist_normal = "poltergeist_weak",
	poltergeist_strong = "poltergeist_weak",
	pseudo_gigant_normal = "pseudo_gigant_weak",
	pseudo_gigant_strong = "pseudo_gigant_weak",
        gigant_weak = "pseudo_gigant_weak",
        gigant_normal = "pseudo_gigant_weak",
        gigant_strong = "pseudo_gigant_weak",
	controller_normal = "controller_weak",
	controller_strong = "controller_weak",
        m_controller_normal = "controller_weak",
        m_controller_normal_fat = "controller_weak",
        m_controller_old = "controller_weak",
        m_controller_old_fat = "controller_weak",
        m_controller_senator = "controller_weak",
        controller_babka = "controller_weak",
        controller_tubeman = "controller_weak",
        electro_chimera = "controller_weak",
        elektro_chimera = "controller_weak",
        vypolzen = "controller_weak",
        zombie_z = "zombie_weak",
        zombie_y = "zombie_weak",
        zombie_x = "zombie_weak",
        zombie_m = "zombie_weak",
        zombie_new = "zombie_weak",
        zombie_babka_1 = "zombie_weak",
        zombie_babka_2 = "zombie_weak",
        zombie_babka_3 = "zombie_weak",
        zombie_ghost = "zombie_strong",
        vodyanoy1 = "zombie_strong",
        vodyanoy2 = "zombie_strong",
        vodyanoy3 = "zombie_strong",
        vodyanoy4 = "zombie_strong",
        vodyanoy5 = "zombie_strong",
        vodyanoy6 = "zombie_strong",
	--[[ -- àëèàñû íå íóæíû
	psy_dog_weak = "psy_dog",
	psy_dog_normal = "psy_dog",
	psy_dog_strong = "psy_dog", ]]
	zombie_trup = "zombie_weak",
	zombie_trup2 = "zombie_weak"
}

monster_classes = {
			[clsid.tushkano_s    ] = "tushkano",
			[clsid.flesh_s       ] = "flesh",
			[clsid.boar_s        ] = "boar",
			[clsid.cat_s         ] = "cat",
			[clsid.zombie_s      ] = "zombie",
			[clsid.burer_s       ] = "burer",
			[clsid.fracture_s    ] = "fracture",
			[clsid.chimera_s     ] = "chimera",
			[clsid.dog_s         ] = "dog",
			[clsid.pseudodog_s   ] = "pseudodog",
			[clsid.psy_dog_s     ] = "psy_dog",
			[clsid.psy_dog_phantom_s] = "psy_dog_phantom",
			[clsid.snork_s       ] = "snork",
			[clsid.poltergeist_s ] = "poltergeist",
			[clsid.gigant_s      ] = "pseudo_gigant",
			[clsid.controller_s  ] = "controller",
			[clsid.bloodsucker_s ] = "bloodsucker"
		}		

local artefacts = {
	af_medusa = 1, af_cristall_flower = 2, af_night_star = 3,
	af_vyvert = 1, af_gravi = 2, af_gold_fish = 3,
	af_drops = 1, af_fireball = 2, af_cristall = 3,
	af_blood = 1, af_mincer_meat = 2, af_soul = 3,
	af_electra_sparkler = 1, af_electra_flash = 2, af_electra_moonlight = 3,
	af_ameba_slime = 1, af_ameba_slug = 2, af_ameba_mica = 3,
	af_rusty_thorn = 1, af_rusty_kristall = 2, empty = 0,
	af_dummy_spring = 4, af_dummy_dummy = 4, af_dummy_battery = 4,
	af_dummy_pellicle = 4, af_dummy_glassbeads = 4, af_fuzz_kolobok = 4
}

local artefact_sections = {
	"af_medusa", "af_cristall_flower", "af_night_star",
	"af_vyvert", "af_gravi", "af_gold_fish",
	"af_drops", "af_fireball", "af_cristall",
	"af_blood", "af_mincer_meat", "af_soul",
	"af_electra_sparkler", "af_electra_flash", "af_electra_moonlight",
	"af_ameba_slime", "af_ameba_slug", "af_ameba_mica",
	"af_rusty_thorn", "af_rusty_kristall", "af_rusty_sea-urchin",
	"af_dummy_spring", "af_dummy_dummy", "af_dummy_battery",
	"af_dummy_pellicle", "af_dummy_glassbeads", "af_fuzz_kolobok"
}

local artefacts_sect = {
"Медуза", "Каменный цветок", "Ночная звезда",
"Выверт", "Грави", "Золотая рыбка",
"Капли", "Огненный шар", "Кристалл",
"Кровь камня", "Ломоть мяса", "Душа",
"Бенгальский огонь", "Вспышка", "Лунный свет",
"Слизь", "Слизняк", "Слюда",
"Колючка", "Кристалльная колючка", "Морской ёж",
"Пружина", "Пустышка", "Батарейка",
"Плёнка", "Мамины бусы", "Колобок"
}

function addKillCount(npc)
	local props, sect = getNpcType(npc)
	if (props == nil or sect == nil) then
		return
	end

	local sect_name
	if sect_alias[sect] ~= nil then
		sect_name = sect_alias[sect]
	else
		sect_name = sect
	end

	if killCountProps[sect_name] == nil then
		print_table(sect_alias)
		abort("Statistic ERROR: required section [%s] not present, based [%s]", tostring(sect_name), tostring(sect))
	end
	actor_stats.add_points(props, sect_name, 1, killCountProps[sect_name])
	db.actor:set_character_rank(db.actor:character_rank() + killCountProps[sect_name])
end

function addArtefact(artefact)
	if load_variable(artefact:name(), false) == true then return end

	if artefact:section() == "af_rusty_sea-urchin" then -- êîñòûëü äëÿ ìîðñêîãî åæà...
		actor_stats.add_points("artefacts", artefacts_sect[21], 1, 3)
		db.actor:set_character_rank(db.actor:character_rank() + 3)
		save_variable(artefact:name(), true)
		return --à ìîæåò è íå ñòîèò...
	end

	for i=1,27 do
		if artefact_sections[i] == artefact:section() then
			actor_stats.add_points("artefacts", artefacts_sect[i], 1, artefacts[artefact:section()])
			db.actor:set_character_rank(db.actor:character_rank() + artefacts[artefact:section()])
			save_variable(artefact:name(), true)
			save_variable("ui_pda_statistics", true)
		end
	end
end

function getNpcType(npc)
	if IsStalker(npc) then
		local community = "neutral"
		if     npc:character_community() == "monolith" then	community = "monolith"
			community = "monolith"
		elseif npc:character_community() == "military" then 	community = "military"
			community = "military"
		elseif npc:character_community() == "killer" then 	community = "killer"
			community = "killer"
		elseif npc:character_community() == "ecolog" then 	community = "ecolog"
			community = "ecolog"
		elseif npc:character_community() == "dolg" then 	community = "dolg"
			community = "dolg"
		elseif npc:character_community() == "freedom" then 	community = "freedom"
			community = "freedom"
		elseif npc:character_community() == "bandit" then 	community = "bandit"
		elseif npc:character_community() == "zombied" then 	community = "zombied"
		elseif npc:character_community() == "bratok" then 	community = "bratok"
		elseif npc:character_community() == "nebo" then 	community = "nebo"
                elseif npc:character_community() == "wanderer" then 	community = "wanderer"
                elseif npc:character_community() == "ucheniy" then 	community = "ucheniy"
                elseif npc:character_community() == "usa"  then 	community = "usa"
                elseif npc:character_community() == "newstalk" then 	community = "newstalk"
                elseif npc:character_community() == "hunter" then 	community = "hunter"
                elseif npc:character_community() == "maroder" then 	community = "maroder"
                elseif npc:character_community() == "maroderka" then 	community = "maroderka"
				elseif npc:character_community() == "catcher" then 	community = "catcher"
		end
		local rank = ranks.get_obj_rank_name(npc)
		return "stalkerkills", community.."_"..rank
	else
		local community = monster_classes[get_clsid(npc)]
		if community == nil then
			return nil, nil
			--abort("Statistic ERROR: cannot find monstr class for [%s]", npc:name())
		end

		if community == "NIL" then
			return nil,nil
		end

		local rank = ranks.get_obj_rank_name(npc)
		return "monsterkills", community.."_"..rank
	end
end

function save_variable(variable_name, value)
	xr_logic.pstor_store(db.actor, variable_name, value)
end

function load_variable(variable_name, value_if_not_found)
	return xr_logic.pstor_retrieve(db.actor, variable_name, value_if_not_found)
end