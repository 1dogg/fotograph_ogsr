--[[---------------------------------------------------------------------------------------------------------------------------------
 File			: boryan67.script
 Description	: Процедуры вызова периодических аккустических и визуальных глюков у ГГ, вирусное заражение и контроль жажды.
 Copyright		: 2013 © boryan67
 Author			: boryan67(Dracula) - scripts & _Val_ - sounds
 Last edit		: 09.04.2013
--]]------------------------------------------------------------------------------------------------------------------------------------
local game_diff = level.get_game_difficulty()		-- текущая сложность игры 0-3
local coeff_diff = 4-game_diff						-- коэффициет обратный сложности 1-4
local MaxTime = 900 * level.get_time_factor()		-- Максимальное время ожидания глюка в секундах реального времени
local MinTime = 300 * level.get_time_factor()		-- Минимальное время ожидания глюка в секундах реального времени
-- Счетчики для глюков
local GlukTimer_1 = math.random(MinTime,MaxTime)
local GlukTimer_2 = math.random(MinTime,MaxTime)
local GlukTimer_3 = math.random(MinTime,MaxTime)
local GlukTimer_4 = math.random(MinTime,MaxTime)
local GlukTimer_5 = math.random(MinTime,MaxTime)
local GlukTimer_6 = math.random(MinTime,MaxTime)
local InfectTimer = math.random(90,270)
local GlukCount_1 = 0
local GlukCount_2 = 0
local GlukCount_3 = 0
local GlukCount_4 = 0
local GlukCount_5 = 0
-- Переменные для кристалла- телепортера----------------------------
local RndTeleportEnable = false		-- признак разрешения телепортации
local RndTeleportPos = vector()		-- координаты точки телепортации
--------------------------------------------------------------------
local GlukHron = 100/(game_diff+1)	-- количество "приходов" для перехода в хроническую форму глюкавости (максимум 255)
local is_debug = false				-- true/false - включение/отключение вывода отладочной информации на экран
local OldSec=" "					-- предыдущее значение игровых секунд
local NowSec=" "					-- текущее значение игровых секунд
local OldPos = vector()				-- предыдущая позиция ГГ для определения бега
local GG_Move = 0					-- текущая скорость ГГ (< 0.1 - стоит, > 1 - бежит)
local MaxReplicGG = 15				-- регулятор частоты произносимых ГГ реплик (30 - 50%, 60 - 100%)
--признаки наличия у ГГ кристаллов----------------------------------
local has_absolut,has_talisman,has_obereg = 0,0,false
--------------------------------------------------------------------
local DivCount = 0					-- Предделитель для жажды
local DrinkCount = 0				-- Счетчик жажды
local InfectCount = 0				-- Счетчик заразы
local OverEnable = true				-- Разрешение проверки
local Overload = false				-- Признак перегрузки
local Bor67_1 = 0					-- Время действия вакцины
local Bor67_2 = 0					-- Порог срабатывания
local Bor67_3 = 0					-- reserved

--Амбиентные звуки монстров
local Gluk_sounds1={
"monsters\\cat\\attack_hit",
"monsters\\cat\\idle",
"monsters\\deathclaw\\aggressive",
"monsters\\deathclaw\\pain_0",
"monsters\\dog_new\\bdog_attack_0",
"monsters\\dog_new\\bdog_idle_4",
"monsters\\dog_new\\idle_2",
"monsters\\dog_new\\eat_0",
"monsters\\vypolzen\\vypolzen_attack_0",
"monsters\\vypolzen\\vypolzen_attack_1",
"monsters\\vypolzen\\vypolzen_idle_3",
"monsters\\vypolzen\\vypolzen_idle_4",
"monsters\\bloodsucker\\sucker_breath_0",
"monsters\\bloodsucker\\attack_0",
"monsters\\bloodsucker\\attack_1",
"monsters\\bloodsucker\\attack_2",
"monsters\\bloodsucker\\attack_3",
"monsters\\boar\\boar_aggressive_0",
"monsters\\boar\\boar_aggressive_1",
"monsters\\boar\\boar_aggressive_2",
"monsters\\boar\\boar_aggressive_3",
"monsters\\burer\\burer_attack_0",
"monsters\\burer\\burer_gravi_attack_0",
"monsters\\burer\\burer_attacking_0",
"monsters\\burer\\burer_scan_affect_0",
"monsters\\controller\\controller_attack_hit_0",
"monsters\\controller\\controller_tube_prepare",
"monsters\\flesh\\flesh_aggressive_0",
"monsters\\flesh\\flesh_aggressive_1",
"monsters\\flesh\\flesh_aggressive_2",
"monsters\\giant\\giant_aggressive_0",
"monsters\\giant\\giant_breath_1",
"monsters\\poltergeist\\fire_idle_0",
"monsters\\poltergeist\\attack_hit_flame",
"monsters\\poltergeist\\tele_idle_0",
"monsters\\poltergeist\\tele_get_0",
"monsters\\pseudodog\\pdog_aggression_0",
"monsters\\pseudodog\\pdog_aggression_1",
"monsters\\snork\\snork_attack_0",
"monsters\\snork\\snork_attack_1",
"monsters\\tushkano\\tushkano_aggressive_2",
"monsters\\tushkano\\tushkano_aggressive_3",
"monsters\\zombie\\fracture\\zombie_idle_5",
"monsters\\zombie\\fracture\\zombie_idle_7",
"monsters\\zombie\\fracture\\zombie_idle_9",
"monsters\\zombie\\water_zombie\\_scary sounds0",
"monsters\\zombie\\water_zombie\\_scary sounds1",
"monsters\\zombie_babka\\zombie_idle_6",
"monsters\\zombie_babka\\zombie_attack_10",
"monsters\\zombie\\zombie_attack_1",
"monsters\\zombie\\zombie_attack_7",
"monsters\\zombie\\zombie_attack_8"
}
-- Звуки посторонние
local Gluk_sounds2={
"ambient\\gluki\\gluki_1",
"ambient\\gluki\\gluki_2",
"ambient\\gluki\\gluki_3",
"ambient\\gluki\\gluki_4",
"ambient\\gluki\\gluki_5",
"ambient\\gluki\\gluki_6",
"ambient\\gluki\\gluki_7",
"ambient\\gluki\\gluki_8",
"ambient\\gluki\\gluki_9",
"ambient\\gluki\\gluki_10",
"ambient\\gluki\\gluki_11",
"ambient\\gluki\\gluki_12",
"ambient\\gluki\\gluki_13",
"ambient\\gluki\\gluki_14",
"ambient\\gluki\\gluki_15",
"ambient\\gluki\\gluki_16",
"ambient\\gluki\\gluki_17",
"ambient\\gluki\\gluki_18",
"ambient\\gluki\\gluki_19",
"ambient\\gluki\\gluki_20",
"ambient\\gluki\\gluki_21",
"ambient\\gluki\\gluki_22",
"ambient\\gluki\\gluki_23",
"ambient\\gluki\\gluki_24",
"ambient\\gluki\\gluki_25",
"ambient\\gluki\\gluki_26",
"ambient\\gluki\\gluki_27",
"ambient\\gluki\\gluki_28",
"ambient\\gluki\\gluki_29",
"ambient\\gluki\\gluki_30"
}
-- Звуки ГГ при разворотах
local Gluk_sounds3={
"actor\\pain_1",
"ambient\\gluki\\gluks_1",
"ambient\\gluki\\gluks_2",
"actor\\pain_2",
"ambient\\gluki\\gluks_3",
"ambient\\gluki\\gluks_4",
"actor\\pain_4",
"ambient\\gluki\\gluks_5",
"actor\\pain_6",
"ambient\\gluki\\gluks_6",
"ambient\\gluki\\gluks_7",
"ambient\\gluki\\gluks_8",
"ambient\\gluki\\gluks_9"
}
-- Звуки ГГ при телепортировании
local Gluk_sounds4={
"ambient\\gluki\\glukt_1",
"ambient\\gluki\\glukt_2",
"ambient\\gluki\\glukt_3",
"ambient\\gluki\\glukt_4",
"ambient\\gluki\\glukt_5",
"ambient\\gluki\\glukt_6",
"ambient\\gluki\\glukt_7",
"ambient\\gluki\\glukt_8",
"ambient\\gluki\\glukt_9",
"ambient\\gluki\\glukt_10"
}
--------------------------------------------------------------------
function GlukUpdate()
	local actor = db.actor
	if actor == nil or not actor:alive() then return end
	local now =game.get_game_time():timeToString(game.CTime.TimeToSeconds)
	if now == nil then return end
	NowSec = string.sub(now,7,8) -- получаем секунды
	game_diff = level.get_game_difficulty()		
	coeff_diff = 4-game_diff
	if OldSec==NowSec then
		if OverEnable then 
			Analise()
			OverEnable=false
		end	
		return 
	end
-- Прошла секунда игрового времени		
	OldSec = NowSec
	OverEnable=true
	GG_Move = GGspeed() -- определяем скорость движения ГГ
	DrinkUpdate() -- проверяем жажду
	InfectUpdate() -- проверяем заразу
	-- проверяем наличие кристаллов у ГГ
	has_absolut,has_talisman,has_obereg = 0,0,false
	actor:iterate_inventory(SearchItems,actor)
	if not GGHron() and has_obereg then return end		-- если не хроника и есть оберег, то не глючим
-- звуки монстров
	if has_absolut>coeff_diff or GlukCount_1 >= GlukHron then
		if GlukTimer_1>0 then 
			GlukTimer_1=GlukTimer_1-has_absolut
			if has_absolut == 0 then GlukTimer_1 = GlukTimer_1 -1 end
		else 
			if GlukCount_1 < GlukHron then GlukCount_1=GlukCount_1+1 end
			SoundGluk(Gluk_sounds1, nil, nil)
			GlukTimer_1=math.random(MinTime,MaxTime) -- регулировка частоты эффекта
		end
	end
-- прочие звуки
	if has_absolut>0 or GlukCount_2 >= GlukHron then
		if GlukTimer_2>0 then 
			GlukTimer_2=GlukTimer_2-has_absolut
			if has_absolut == 0 then GlukTimer_2 = GlukTimer_2 -1 end
		else 
			if GlukCount_2 < GlukHron then GlukCount_2=GlukCount_2+1 end
			SoundGluk(Gluk_sounds2, nil, "actor")
			GlukTimer_2=math.random(MinTime,MaxTime) -- регулировка частоты эффекта
		end
	end
-- видеоглюки
	if has_talisman>0 or GlukCount_3 >= GlukHron then
		if GlukTimer_3>0 then 
			GlukTimer_3=GlukTimer_3-has_talisman
			if has_talisman == 0 then GlukTimer_3 = GlukTimer_3 -1 end
		else 
			if GlukCount_3 < GlukHron then GlukCount_3=GlukCount_3+1 end
			VisualGluk(nil)
			GlukTimer_3=math.random(MinTime,MaxTime) -- регулировка частоты эффекта
		end
	end
-- развороты
	if has_talisman>coeff_diff or GlukCount_4 >= GlukHron then
		if GlukTimer_4>0 then 
			GlukTimer_4=GlukTimer_4-has_talisman
			if has_talisman == 0 then GlukTimer_4 = GlukTimer_4 -1 end
		else 
			if GlukCount_4 < GlukHron then GlukCount_4=GlukCount_4+1 end
			RndDirection(1)
			GlukTimer_4=math.random(MinTime,MaxTime) -- регулировка частоты эффекта
		end
	end
-- телепорт
	if has_talisman>coeff_diff+2 then
		if GlukTimer_5>0 then 
			GlukTimer_5=GlukTimer_5-has_talisman			
		else 
			RndTeleport()
			GlukTimer_5=math.random(MinTime,MaxTime) -- регулировка частоты эффекта
		end
	end
-- псевдоаномалии
	if has_absolut>coeff_diff or GlukCount_5 >= GlukHron then
		if GlukTimer_6>0 then 
			GlukTimer_6=GlukTimer_6-has_absolut
		if has_absolut == 0 then GlukTimer_6 = GlukTimer_6 -1 end
		else 
			if GlukCount_5 < GlukHron then GlukCount_5=GlukCount_5+1 end
			RndParticles(nil)
			GlukTimer_6=math.random(MinTime,MaxTime) -- регулировка частоты эффекта
		end
	end
end
--------------------------------------------------------------------
function SearchItems(actor, item)
    local section = item:section()
	if string.find(section,"ks_obereg_") then has_obereg = true end	
	if string.find(section,"ks_absolut_") then has_absolut = has_absolut+1 end
	if string.find(section,"ks_talisman_") then has_talisman = has_talisman+1 end
end
-------------------------------------------------------------------- 
function SoundGluk(table_sounds, num, who)
	local actor = db.actor
	if actor == nil then return end
	local sound
	if num==nil then 
		sound = table_sounds[math.random(table.getn(table_sounds))]
	else
		if num>table.getn(table_sounds) then return end
		sound = table_sounds[num]
	end
	local snd_obj = xr_sound.get_safe_sound_object(sound)
	if who==nil then
	local a=vector()
		a.x=math.random(-15,15)
		a.y=math.random(0,5)
		a.z=math.random(-15,15)
		snd_obj:play_at_pos(db.actor, db.actor:position():add(a))
	else
		snd_obj:play_at_pos(db.actor, db.actor:position())
	end
	if is_debug then news_manager.send_tip(db.actor, sound, nil, nil, 10000) end
end
--------------------------------------------------------------------
function VisualGluk(num)
	if num==nil then num=math.random(0,18) end
	if num==0 then level.add_pp_effector ("blink.ppe", 9112, false)
	elseif num==1 then level.add_pp_effector("dead_zone.ppe", 9113, false)
	elseif num==2 then level.add_pp_effector("snd_shock.ppe", 9114, false)
	elseif num==3 then level.add_pp_effector("proba_test.ppe", 9115, false)
	elseif num==4 then level.add_pp_effector("agr_u_fade.ppe", 9116, false)
	elseif num==5 then level.add_pp_effector("escape.ppe", 9117, false)
	elseif num==6 then level.add_pp_effector("duality_circle.ppe", 9118, false)
	elseif num==7 then level.add_pp_effector("rename.ppe", 9119, false)
	elseif num==8 then level.add_pp_effector("yantar_underground_psi.ppe", 9120, false)
	elseif num==9 then 
		level.add_pp_effector("proba_test.ppe", 9115, false)
		level.add_pp_effector("snd_shock.ppe", 9114, false)
	elseif num==10 then
		level.add_pp_effector("proba_test.ppe", 9115, false)
		level.add_pp_effector("dead_zone.ppe", 9113, false)
	elseif num==11 then
		level.add_pp_effector("proba_test.ppe", 9115, false)
		level.add_pp_effector("agr_u_fade.ppe", 9116, false)
	elseif num==12 then
		level.add_pp_effector("proba_test.ppe", 9115, false)
		level.add_pp_effector("yantar_underground_psi.ppe", 9120, false)
	elseif num==13 then
		level.add_pp_effector("rename.ppe", 9119, false)
		level.add_pp_effector("blink.ppe", 9112, false)
	elseif num==14 then
		level.add_pp_effector("rename.ppe", 9119, false)
		level.add_pp_effector("snd_shock.ppe", 9114, false)
	elseif num==15 then
		level.add_pp_effector("rename.ppe", 9119, false)
		level.add_pp_effector("duality_circle.ppe", 9118, false)
	elseif num==16 then
		level.add_pp_effector("escape.ppe", 9117, false)
		level.add_pp_effector("dead_zone.ppe", 9113, false)
	elseif num==17 then
		level.add_pp_effector("escape.ppe", 9117, false)
		level.add_pp_effector("snd_shock.ppe", 9114, false)
	elseif num==18 then
		level.add_pp_effector("escape.ppe", 9117, false)
		level.add_pp_effector("yantar_underground_psi.ppe", 9120, false)
	end
	if is_debug  then 
		local text = "Эффект "..tostring(num)
		news_manager.send_tip(db.actor, text, nil, nil, 10000) 
	end
end
--------------------------------------------------------------------
function RndDirection(voice)
	local actor = db.actor
	if actor == nil then return end
	local new_dir=vector():set(math.random(-1000, 1000)/1000.0, 0.0001, math.random(-1000, 1000)/1000.0)  
	if new_dir then	
		db.actor:set_actor_direction(-new_dir:getH())	
		if voice~= nil and tonumber(NowSec) < MaxReplicGG then SoundGluk(Gluk_sounds3, nil, "actor") end
	end
end
--------------------------------------------------------------------
function RndTeleport()
	local actor = db.actor
	if actor == nil then return end
	if RndTeleportEnable then
		RndTeleportEnable=false
		if RndTeleportPos then
			db.actor:set_actor_position(RndTeleportPos)
			RndDirection(nil)
			if tonumber(NowSec) < MaxReplicGG then SoundGluk(Gluk_sounds4, nil, "actor") end
		end
	else
		RndTeleportPos=db.actor:position()
		if RndTeleportPos then
			RndTeleportEnable=true
		end	
	end
end
--------------------------------------------------------------------
function RndParticles(num)
	local obj=db.actor
	if obj==nil then return end
	local dir = db.actor:direction()
	if num==nil then num=math.random(0,18) end
	local dist = 6
	if GG_Move > 1 then dist = dist*2,5 end
	if num==0 then amk_particle.amk_particle({particle="explosions\\explosion_fuelcan", pos=obj:position():add(dir:mul(dist)), sound="weapons\\t_rgd5_explosion"})
	elseif num==1 then amk_particle.amk_particle({particle="anomaly2\\electra_idle", pos=obj:position():add(dir:mul(dist)), sound="anomaly\\amk_electra"})
	elseif num==2 then amk_particle.amk_particle({particle="anomaly2\\electra2_blast", pos=obj:position():add(dir:mul(dist)), sound="anomaly\\electra_hit"})
	elseif num==3 then amk_particle.amk_particle({particle="anomaly2\\electra2_blast", pos=obj:position():add(dir:mul(dist)), sound="anomaly\\electra_blast1"})
	elseif num==4 then amk_particle.amk_particle({particle="static\\buble_distort00", pos=obj:position():add(dir:mul(dist)), sound="ambient\\fire2"})
	elseif num==5 then amk_particle.amk_particle({particle="static\\zharka_static", pos=obj:position():add(dir:mul(dist)), sound="anomaly\\zhar_blow"})
	elseif num==6 then amk_particle.amk_particle({particle="anomaly2\\teleport_idle", pos=obj:position():add(dir:mul(dist)), sound="anomaly\\teleport_idle"})
	elseif num==7 then amk_particle.amk_particle({particle="amk_anoms\\bold_idle", pos=obj:position():add(dir:mul(dist)), sound="anomaly\\gravi_rumble1"})
	elseif num==8 then amk_particle.amk_particle({particle="amk_anoms\\bold_blast", pos=obj:position():add(dir:mul(dist)), sound="anomaly\\anomaly_gravy_blast1"})
	elseif num==9 then amk_particle.amk_particle({particle="amk_anoms\\mincer_idle", pos=obj:position():add(dir:mul(dist)), sound="anomaly\\gravi_idle01"})
	elseif num==10 then amk_particle.amk_particle({particle="anomaly2\\gravi_zaxvat_myasorubka", pos=obj:position():add(dir:mul(dist)), sound="anomaly\\anomaly_mincer_blowout"})
	elseif num==11 then amk_particle.amk_particle({particle="amk\\snow", pos=obj:position():add(dir:mul(dist)), sound="anomaly\\gravi_idle01"})
	elseif num==12 then amk_particle.amk_particle({particle="amk\\snow_blow", pos=obj:position():add(dir:mul(dist)), sound="anomaly\\anomaly_mincer_blowout"})
	elseif num==13 then amk_particle.amk_particle({particle="anomaly2\\gravity_idle", pos=obj:position():add(dir:mul(dist)), sound="anomaly\\gravi_idle00"})
	elseif num==14 then amk_particle.amk_particle({particle="anomaly2\\gravity_blast_final00", pos=obj:position():add(dir:mul(dist)), sound="anomaly\\gravi_blowoutdist"})
	elseif num==15 then amk_particle.amk_particle({particle="anomaly2\\studen_idle_bottom", pos=obj:position():add(dir:mul(dist)), sound="anomaly\\buzz_idle"})
	elseif num==16 then amk_particle.amk_particle({particle="anomaly2\\studen_blowout", pos=obj:position():add(dir:mul(dist)), sound="anomaly\\buzz_hit"})
	elseif num==17 then amk_particle.amk_particle({particle="anomaly2\\pux_idle", pos=obj:position():add(dir:mul(dist)), sound="anomaly\\anomaly_gravy_idle"})
	elseif num==18 then amk_particle.amk_particle({particle="anomaly2\\pux_blast", pos=obj:position():add(dir:mul(dist)), sound="anomaly\\pux_blast"})
	end
	if is_debug then 
		local text = "Particles "..tostring(num)
		news_manager.send_tip(db.actor, text, nil, nil, 10000) 
	end
end
--------------------------------------------------------------------
function GG_hit()
    local actor=db.actor
	if actor then 
		SoundGluk(Gluk_sounds3, 1, "actor")
        local h = hit ();
        h.power = 0.25;
        h.direction = vector():set (0, 0, 0);
        h.impulse = 100;
        h.draftsman = actor;
        h.type = hit.telepatic;
        actor:hit (h);
    end
end
--------------------------------------------------------------------
-- определение прекондишена для диалога на лечение
function GGHron()
	if GlukCount_1>=GlukHron then return true 
	elseif GlukCount_2>=GlukHron then return true 
	elseif GlukCount_3>=GlukHron then return true 
	elseif GlukCount_4>=GlukHron then return true 
	elseif GlukCount_5>=GlukHron then return true 
	end	
	return false 
end
--------------------------------------------------------------------
-- лечение ГГ от хронических глюков
function GGnoHron()
	GlukCount_1=0
	GlukCount_2=0
	GlukCount_3=0
	GlukCount_4=0
	GlukCount_5=0
	level.add_cam_effector("camera_effects\\prison_1.anm", 25, false, "")
    level.add_pp_effector("blink.ppe", 2003, false)
	level.add_pp_effector("yantar_underground_psi.ppe", 2007, false)
	level.add_pp_effector("total_recall.ppe", 2008, false)
	local snd_obj = xr_sound.get_safe_sound_object([[new\actor_ukol_da]])
	snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
	level.add_cam_effector("camera_effects\\surge_01.anm", 26, false, "")
end
--------------------------------------------------------------------
function Sahar_speech()
	local snd_obj = xr_sound.get_safe_sound_object([[new\actor_ukol]])
	snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
end
--------------------------------------------------------------------
function GGspeed()
	local temp = 0
	local NewPos = db.actor:position()
	if NewPos==nil then return temp end
	if OldPos==nil then OldPos = NewPos	end
	temp = math.sqrt((OldPos.x-NewPos.x)^(2)+(OldPos.y-NewPos.y)^(2)+(OldPos.z-NewPos.z)^(2))
	OldPos = NewPos
	return temp
end
--------------------------------------------------------------------
-- Отработка жажды у ГГ
--------------------------------------------------------------------
local tbl_food ={
"bread_a",
"bread",
"kolbasa",
"kolbasa_a",
"conserva",
"oreh",
"oliv",
"sard",
"tush",
"paek1",
"paek2",
"galet",
"galet_s",
"ogirki",
"meat",
"shprots",
"pashtet",
"pringles",
"zel_goroshek",
"gribki",
"kilka",
"sguschenka",
"konfeta"
}
local tbl_drink ={
"mineral",
"chernigov",
"old_melnik",
"vodka_a",
"vodka",
"energy_drink",
"vodka_new",
"cognac",
"kagor",
"beloe"
}
--------------------------------------------------------------------
-- Прекондишены по заражению
--------------------------------------------------------------------
-- Вернет true если ГГ хоть чуть-чуть заражен
function virus_present()
 return InfectCount>0
end
-- Вернет true если ГГ заражен до зеленого значка и более
function virus_green()
 return InfectCount>4000
end
-- Использование объекта
function use_object(obj)
    local sect = obj:section()
	-- Изменения жажды в зависимости от того - съели/выпили что-нибудь
	if not sect then return end
	for i=1, table.getn(tbl_food) do
		if sect == tbl_food[i] then
			if DrinkCount<60535 then DrinkCount=DrinkCount+5000 -- добавляем, если еда
			else DrinkCount=65450
			end
		end
	end
	for i=1, table.getn(tbl_drink) do				
		if sect == tbl_drink[i] then
			-- проиграем звуки для напитков
			if sect == "mineral" then 		-- если это минералка, то проиграем звук
				local snd_obj = xr_sound.get_safe_sound_object([[new\drink_voda]])	-- получаем звуковой объект
				snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)	-- проигрываем звук в голове ГГ
			elseif sect == "kagor" or sect == "beloe" then 		-- если это вино, то проиграем звук
				local snd_obj = xr_sound.get_safe_sound_object([[new\drink_vino]])	-- получаем звуковой объект
				snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)	-- проигрываем звук в голове ГГ
			elseif sect == "cognac" then 		-- если это коньяк, то проиграем звук
				local snd_obj = xr_sound.get_safe_sound_object([[new\drink_cognac]])	-- получаем звуковой объект
				snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)	-- проигрываем звук в голове ГГ
			elseif sect == "vodka" then 		-- если это водка, то проиграем звук
				local snd_obj = xr_sound.get_safe_sound_object([[new\drink_vodka]])	-- получаем звуковой объект
				snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)	-- проигрываем звук в голове ГГ
			elseif sect == "chernigov" or sect == "old_melnik" then 		-- если это пиво, то проиграем звук
				local snd_obj = xr_sound.get_safe_sound_object([[new\drink_pivo]])	-- получаем звуковой объект
				snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)	-- проигрываем звук в голове ГГ
			elseif sect == "energy_drink" then 		-- если это энергетик, то проиграем звук
				local snd_obj = xr_sound.get_safe_sound_object([[new\drink_energy]])	-- получаем звуковой объект
				snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)	-- проигрываем звук в голове ГГ
			end
			------------------------------
			if DrinkCount> 20000 then DrinkCount=DrinkCount-20000 -- уменьшаем, если напиток
			else DrinkCount=0
			end
			if has_alife_info("GG_vacsina") and sect == "mineral" then -- если ГГ уже принял вакцину и запил эту гадость
				db.actor:disable_info_portion("GG_vacsina")	-- забираем поршень - эту порцию вакцины уже запили
				Bor67_1 = 900	-- вакцинация на 15 минут (900 секунд)
				InfectCount=0	-- изгоняем заразу
				if not has_alife_info("GG_recover_2")  and not has_alife_info("GG_recover_1") then 
					db.actor:give_info_portion("GG_recover_2") -- выдаем поршень излечения	вакциной
				end 		
			end
		end
	end
	-- Гоняем заразу
	if virus_present() then 	-- если заражение имеет место быть
		if sect=="medkit_army" then
			if InfectCount>3000 then
				InfectCount=InfectCount-3000	
			else 
				InfectCount = 1	-- до конца не лечим
			end			
		elseif sect=="medkit_scientic" then
			if InfectCount>6000 then
				InfectCount=InfectCount-6000	-- до конца не лечим
			else
				InfectCount=0	-- изгоняем заразу
				if not has_alife_info("GG_recover_1") and not has_alife_info("GG_recover_2") then db.actor:give_info_portion("GG_recover_1") end -- выдаем поршень излечения аптечкой
			end
		elseif sect=="vacsina" then 
			if not has_alife_info("GG_vacsina") then 
				db.actor:give_info_portion("GG_vacsina") -- выдаем поршень - ГГ принял вакцину
				local snd_obj = xr_sound.get_safe_sound_object([[new\vacsina]])
				snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)	-- выдаем реплику о воде
			end 
		end
	end
end
--------------------------------------------------------------------
local tbl_infect={
"ambient\\actor_gripp\\actor_gripp_1",
"ambient\\actor_gripp\\actor_gripp_2",
"ambient\\actor_gripp\\actor_gripp_3",
"ambient\\actor_gripp\\actor_gripp_4",
"ambient\\actor_gripp\\actor_gripp_5",
"ambient\\actor_gripp\\actor_gripp_6",
"ambient\\actor_gripp\\actor_gripp_7",
"ambient\\actor_gripp\\chih_111",
"ambient\\actor_gripp\\chih_211"
--"ambient\\actor_gripp\\actor_gripp_1",
--"ambient\\actor_gripp\\actor_gripp_2"
}
local FirstRun=true
function InfectUpdate()
	if Bor67_1 > 0 then Bor67_1 = Bor67_1 - 1 end	-- если действует вакцина, то уменьшаем время действия
	if InfectCount>0 and InfectCount<65535 then -- если заражен, то прогрессируем
		InfectCount=InfectCount+1 
		if has_alife_info("GG_recover_1") then db.actor:disable_info_portion("GG_recover_1") end -- опять заразился, забираем поршень излечения
		if has_alife_info("GG_recover_2") then db.actor:disable_info_portion("GG_recover_2") end -- опять заразился, забираем поршень излечения
	else	-- иначе проверяем на источник заражения
		if level.name()=="l08u_brainlab" or level.name()=="l04u_labx18" or level.name()=="l10u_bunker" or level.name()=="l03u_agr_underground" then	-- если подземка
			local actor = db.actor
			if actor and Bor67_1==0 then	-- если вакцина не действует
				InfectCount=1	-- подземка, вакцина не действует, считаем, что заразились
				local outfit=actor:get_current_outfit()	-- проверяем костюмчик
				if outfit then
					local sect=outfit:section()	-- получаем тип костюма
					if sect=="ecolog_outfit" or sect=="protection_outfit" or sect=="white_outfit" or sect=="super_outfit" then
						local cond=outfit:condition()	-- получаем дырявость костюма
						if cond and cond>0.7 then InfectCount=0 end	-- костюм не поврежден, обнуляем заразу
					end
				end
			end
		end
	end	
	-- Начинаем обработку 
	local hud = get_hud()
	local custom_static
	local snd_obj
	if InfectCount>0 then	-- если заражение есть
		-- Кашляем периодически
		if InfectTimer > 0 then
			InfectTimer = InfectTimer -1
		else
			InfectTimer = math.random(90,270)
			local temp = math.random(1,table.getn(tbl_infect))
			if temp>7 then	-- чихаем
				level.add_cam_effector("camera_effects\\hit_back.anm", 33334, false, "")
				level.add_cam_effector("camera_effects\\hit_back.anm", 33335, false, "")
				level.add_cam_effector("camera_effects\\hit_back.anm", 33336, false, "")
				level.add_cam_effector("camera_effects\\hit_back.anm", 33337, false, "")
				level.add_cam_effector("camera_effects\\hit_back.anm", 33338, false, "")
				level.add_cam_effector("camera_effects\\hit_back.anm", 33339, false, "")
				level.add_cam_effector("camera_effects\\hit_back.anm", 33340, false, "")
				VisualGluk(13)	-- сильно чихнули
			else	-- кашляем
				level.add_cam_effector("camera_effects\\hit_back.anm", 33334, false, "")
				local tmp = math.random()
				if tmp>0.5 then	-- величиваем амплитуду
					level.add_cam_effector("camera_effects\\hit_back.anm", 33335, false, "")
					VisualGluk(5)	-- краснеет в глазах
				end
			end	
			SoundGluk(tbl_infect, temp, "actor")
		end
	end
	-- Начальный уровень заражения
	if InfectCount >1000 then
		if not has_alife_info("boryan_infect_0") then 
			db.actor:give_info_portion("boryan_infect_0")
			snd_obj = xr_sound.get_safe_sound_object([[ambient\actor_gripp\actor_grippreplik_0]])
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
		end
	else
		if has_alife_info("boryan_infect_0") then
			db.actor:disable_info_portion("boryan_infect_0")
		end
	end
	-- Первый уровень зеленый
	if InfectCount >4000 then
		if FirstRun then
			level.add_pp_effector("yantar_underground_psi.ppe", 33333, true)
			level.set_pp_effector_factor(33333, 0.25)
		end
		if not has_alife_info("boryan_infect_1") then 
			db.actor:give_info_portion("boryan_infect_1")
			snd_obj = xr_sound.get_safe_sound_object([[ambient\actor_gripp\actor_grippreplik_1]])
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
			level.add_pp_effector("yantar_underground_psi.ppe", 33333, true)
			level.set_pp_effector_factor(33333, 0.25)
		end
		custom_static = hud:GetCustomStatic("infect_green")
		if custom_static == nil then
			hud:AddCustomStatic("infect_green", true)
		end
		InfectTimer = InfectTimer -1	-- учащаем кашель
	else
		if has_alife_info("boryan_infect_1") then
			db.actor:disable_info_portion("boryan_infect_1")
			level.remove_pp_effector(33333)
		end
		custom_static = hud:GetCustomStatic("infect_green")
		if custom_static ~= nil then
			hud:RemoveCustomStatic("infect_green", true)
		end
	end
	-- Второй уровень желтый
	if InfectCount >8000 then
		if FirstRun then
			level.set_pp_effector_factor(33333, 0.5)
		end
		if not has_alife_info("boryan_infect_2") then 
			db.actor:give_info_portion("boryan_infect_2")
			snd_obj = xr_sound.get_safe_sound_object([[ambient\actor_gripp\actor_grippreplik_2]])
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
			level.set_pp_effector_factor(33333, 0.5)
		end
		custom_static = hud:GetCustomStatic("infect_green")
		if custom_static ~= nil then
			hud:RemoveCustomStatic("infect_green", true)
		end			
		custom_static = hud:GetCustomStatic("infect_yellow")
		if custom_static == nil then
			hud:AddCustomStatic("infect_yellow", true)
		end
		InfectTimer = InfectTimer -1	-- учащаем кашель
		if db.actor.power>0.12 then db.actor.power = -0.005 end -- ограничиваем потерю сил
	else
		if has_alife_info("boryan_infect_2") then
			db.actor:disable_info_portion("boryan_infect_2")
		end
		custom_static = hud:GetCustomStatic("infect_yellow")
		if custom_static ~= nil then
			hud:RemoveCustomStatic("infect_yellow", true)
		end
	end
	-- Третий уровень красный
	if InfectCount >12000 then
		if FirstRun then
			level.set_pp_effector_factor(33333, 0.75)
		end
		if not has_alife_info("boryan_infect_3") then 
			db.actor:give_info_portion("boryan_infect_3")
			snd_obj = xr_sound.get_safe_sound_object([[ambient\actor_gripp\actor_grippreplik_3]])
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
			level.set_pp_effector_factor(33333, 0.75)			
		end	
		custom_static = hud:GetCustomStatic("infect_yellow")
		if custom_static ~= nil then
			hud:RemoveCustomStatic("infect_yellow", true)
		end			
		custom_static = hud:GetCustomStatic("infect_red")
		if custom_static == nil then
			hud:AddCustomStatic("infect_red", true)
		end	
		InfectTimer = InfectTimer -1	-- учащаем кашель
		if db.actor.power>0.12 then db.actor.power = -0.0025 end -- ограничиваем потерю сил
		if db.actor.health>0.12 then db.actor.health = -0.0025 end -- ограничиваем потерю здоровья		
	else
		if has_alife_info("boryan_infect_3") then
			db.actor:disable_info_portion("boryan_infect_3")
		end
		custom_static = hud:GetCustomStatic("infect_red")
		if custom_static ~= nil then
			hud:RemoveCustomStatic("infect_red", true)
		end
	end
	-- Четвертый уровень критический
	if InfectCount >16000 then
		if FirstRun then
			level.set_pp_effector_factor(33333, 1.0)
		end
		if not has_alife_info("boryan_infect_4") then 
			db.actor:give_info_portion("boryan_infect_4")
			snd_obj = xr_sound.get_safe_sound_object([[ambient\actor_gripp\actor_grippreplik_4]])
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
			level.set_pp_effector_factor(33333, 1.0)
		end	
		InfectTimer = InfectTimer -1	-- учащаем кашель
		if db.actor.power>0.12 then db.actor.power = -0.0025 end -- ограничиваем потерю сил
		if db.actor.health>0.12 then db.actor.health = -0.0025 end -- ограничиваем потерю здоровья		
	else
		if has_alife_info("boryan_infect_4") then
			db.actor:disable_info_portion("boryan_infect_4")
		end
	end
	-- Все! Утонул в соплях...
	if InfectCount >20000 then
		amk.make_suicide(db.actor)
	end
	
	FirstRun=false
end
--------------------------------------------------------------------
function DrinkUpdate()
	local hud = get_hud()
	local custom_static
	local PowerHit
	local snd_obj
	-- Тормозим рост счетчика жажды с помощью предделителя
	DivCount = DivCount +1
	if DivCount>=2 then 		 		-- тормозим в 2 раза
		DivCount = 0				-- сбрасываем предделитель
		-- Прошло 2 секунды - увеличиваем жажду
		if GG_Move>0.1 and DrinkCount<65535 then DrinkCount=DrinkCount+1 end -- если идем, то сохнем 
		if GG_Move>1 and DrinkCount<65533 then DrinkCount=DrinkCount+2 end -- если бежим, то сохнем быстрее
	end
	-- урон нарастает постепенно
	PowerHit=DrinkCount/3276750 -- В пределе 65535/3276750=0,02
	if db.actor.power>0.1 then db.actor.power = -(PowerHit) end -- ограничиваем потерю сил
	-- Первый уровень зеленый
	if DrinkCount>8191 then 
		if not has_alife_info("boryan_drink_1") then 
			db.actor:give_info_portion("boryan_drink_1")
				if math.random(0,10)>4 then
					snd_obj = xr_sound.get_safe_sound_object([[ambient\gluki\actor_voda1]])
				else
					snd_obj = xr_sound.get_safe_sound_object([[ambient\gluki\actor_voda]])
				end
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)			
		end
		custom_static = hud:GetCustomStatic("water_green")
		if custom_static == nil then
			hud:AddCustomStatic("water_green", true)
		end
	else
		if has_alife_info("boryan_drink_1") then
			db.actor:disable_info_portion("boryan_drink_1")
		end
		custom_static = hud:GetCustomStatic("water_green")
		if custom_static ~= nil then
			hud:RemoveCustomStatic("water_green", true)
		end
	end

	if DrinkCount>16383 then 
		if not has_alife_info("boryan_drink_2") then 
			db.actor:give_info_portion("boryan_drink_2")
			snd_obj = xr_sound.get_safe_sound_object([[ambient\gluki\actor_voda2]])
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)			
		end
	else
		if has_alife_info("boryan_drink_2") then
			db.actor:disable_info_portion("boryan_drink_2")
		end
	end
	-- жажда сильная - начинаем терять здоровье
	if DrinkCount>24575 then 
		if db.actor.health>0.1 then db.actor.health = -(PowerHit)/4 end -- ограничиваем потерю здоровья
		if not has_alife_info("boryan_drink_3") then 
			db.actor:give_info_portion("boryan_drink_3")
			snd_obj = xr_sound.get_safe_sound_object([[ambient\gluki\actor_voda3]])
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)			
		end
		custom_static = hud:GetCustomStatic("water_green")
		if custom_static ~= nil then
			hud:RemoveCustomStatic("water_green", true)
		end			
		custom_static = hud:GetCustomStatic("water_yellow")
		if custom_static == nil then
			hud:AddCustomStatic("water_yellow", true)
		end
	else
		if has_alife_info("boryan_drink_3") then
			db.actor:disable_info_portion("boryan_drink_3")
		end
		custom_static = hud:GetCustomStatic("water_yellow")
		if custom_static ~= nil then
			hud:RemoveCustomStatic("water_yellow", true)
		end
	end

	if DrinkCount>32767 then		
		if not has_alife_info("boryan_drink_4") then
			db.actor:give_info_portion("boryan_drink_4")
			snd_obj = xr_sound.get_safe_sound_object([[ambient\gluki\actor_voda4]])
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)			
		end
	else
		if has_alife_info("boryan_drink_4") then
			db.actor:disable_info_portion("boryan_drink_4")
		end
	end

	if DrinkCount>40959 then		
		if not has_alife_info("boryan_drink_5") then
			db.actor:give_info_portion("boryan_drink_5")
			snd_obj = xr_sound.get_safe_sound_object([[ambient\gluki\actor_voda5]])
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)			
		end
	else
		if has_alife_info("boryan_drink_5") then
			db.actor:disable_info_portion("boryan_drink_5")
		end
	end	
	
	if DrinkCount>49151 then		
		if not has_alife_info("boryan_drink_6") then
			db.actor:give_info_portion("boryan_drink_6")
			snd_obj = xr_sound.get_safe_sound_object([[ambient\gluki\actor_voda6]])
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)			
		end
		custom_static = hud:GetCustomStatic("water_yellow")
		if custom_static ~= nil then
			hud:RemoveCustomStatic("water_yellow", true)
		end			
		custom_static = hud:GetCustomStatic("water_red")
		if custom_static == nil then
			hud:AddCustomStatic("water_red", true)
		end
	else
		if has_alife_info("boryan_drink_6") then
			db.actor:disable_info_portion("boryan_drink_6")
		end
		custom_static = hud:GetCustomStatic("water_red")
		if custom_static ~= nil then
			hud:RemoveCustomStatic("water_red", true)
		end
	end
	
	if DrinkCount>57343 then		
		if not has_alife_info("boryan_drink_7") then
			db.actor:give_info_portion("boryan_drink_7")
			snd_obj = xr_sound.get_safe_sound_object([[ambient\gluki\actor_voda7]])
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)			
		end
	else
		if has_alife_info("boryan_drink_7") then
			db.actor:disable_info_portion("boryan_drink_7")
		end
	end
	
	-- Преддверие смерти
	if DrinkCount>65450 and DrinkCount<65534 then
		if not has_alife_info("boryan_drink_9") then
			db.actor:give_info_portion("boryan_drink_9")
			snd_obj = xr_sound.get_safe_sound_object([[ambient\gluki\actor_voda8]])
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
		end
	else
		if has_alife_info("boryan_drink_9") then
			db.actor:disable_info_portion("boryan_drink_9")
		end
	end	
	-- Смерть от жажды
	if DrinkCount>65534 then
		amk.make_suicide(db.actor)
	end
end
--------------------------------------------------------------------

local all_weight = 0
local packet = net_packet()
local get_ini = system_ini()
function GetInvWeight()
    all_weight = 0
    local npc = db.actor
    if npc ~= nil then
        npc:iterate_inventory(check_all_actor_items, npc)
    end
	return all_weight
end
function check_all_actor_items(actor, item)
    local add_weight = 0
    local count = 0
	local se_obj
	local key_class
    local section = item:section()
    if section then
        if get_ini:section_exist(section) then
            if get_ini:line_exist(section, "inv_weight") then
                if get_ini:line_exist(section, "class") then
                    key_class = get_ini:r_string_wq(section, "class")
                    if key_class == "AMMO" then
                        se_obj = alife():object(item:id())
                        packet = net_packet()
                        cse_alife_item_ammo.STATE_Write(se_obj, packet)
                        packet:r_seek(packet:w_tell() - 2)
                        count = packet:r_u16() -- кол-во боеприпаса в пачке --
                        add_weight = Get_ammo_weight(section, count)
                    else
                        add_weight = get_ini:r_float(section, "inv_weight")
                    end
                end
                all_weight = all_weight + add_weight
            end
        end
    end
end

function Get_ammo_weight(section, count)
    local count_in_box = 0 -- кол-во патронов в полной пачке --
    local box_weight = 0     -- вес полной пачки патронов --
    if get_ini:section_exist(section) then
        if get_ini:line_exist(section, "inv_weight") then
            box_weight = get_ini:r_float(section, "inv_weight")
        end

        if get_ini:line_exist(section, "box_size") then
            count_in_box = get_ini:r_float(section, "box_size")
        end
    end
    if box_weight > 0 and count_in_box > 0 then
        return (box_weight/count_in_box)*count
    else
        return 0
    end
end

local tbl_armor={
{sect="exo_outfit", add_w=20},
{sect="killer_blue_exoskeleton", add_w=15},
{sect="dolg_black_exoskeleton", add_w=35},
{sect="monolit_exoskeleton", add_w=15},
{sect="broken_exoskeleton", add_w=5},
{sect="neytral_exo_antigas_outfit", add_w=5},
{sect="soldier_outfit", add_w=170},
{sect="pekar_outfit", add_w=180},
{sect="exo_bandit_outfit", add_w=50},
{sect="nano_outfit_addw", add_w=250},
{sect="nebo_exo_outfit", add_w=30},
{sect="outfit_stalker_m2", add_w=10},
{sect="svoboda_exoskeleton", add_w=25}
}
function Analise()
	local TotalWeight = GetInvWeight()
	local armor = db.actor:item_in_slot(6)
	local temp
	local MaxWeight=95
	if armor then
		for i=1, table.getn(tbl_armor) do
			temp = tbl_armor[i]
			if armor:section() == temp.sect then
				MaxWeight = MaxWeight + temp.add_w
			end
		end
		if TotalWeight>MaxWeight then
			if GG_Move>1 then
				temp = db.actor.power
				db.actor.power= -temp+0.1
				if not has_alife_info("boryan_gluki_1") then
					db.actor:give_info_portion("boryan_gluki_1")
					local snd_obj = xr_sound.get_safe_sound_object([[ambient\gluki\actor_habar]])
					snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
				end
			end
		else
			if has_alife_info("boryan_gluki_1") then
				db.actor:disable_info_portion("boryan_gluki_1")
			end 
		end
	end
	if not amk.has_g_timer("scan_timer") then
		set_scan_timer()
	end
end
-- сообщения об удачном ограблении нычки
local tbl_good = {
"Вау, как мне повезло сегодня! Такой хабар с нычки чей-то снял - просто Клондайк! Низкий поклон за труды, продолжай в том же духе!",
"Кто же так хабар ценный нычет? Я легко нашел и забрал. Спасибо тебе, лошара безмозглый, ножки дедушкины пожалел!",
"Тиха украинская ночь, но сало надо перепрятать. Сопля зеленая, перепрятал твой хабар неподалеку - попробуй найди!",
"Не перевелись еще дебилы на Земле! Если бы не они - пришлось бы деду старому ножками далеко в Зону топать. Хороший хабар насобирал, подсобил дедушке старому. Было ваше - стало наше.",
"Учишь вас, учишь нычки делать - одни двойки! Хабар хороший поднял сейчас в одной и не употел совсем! Молодцом, кретин!",
"Ага! От меня не спрячешь! Я спинным мозгом нычки чую! Давай-давай, собирай побольше, я заберу!",
"Хорошая попытка была от деда хабар спрятать, но не вышло. Нет такого места, чтобы дед не унюхал. Прячь лучше.",
"Вот ужо свезло так свезло! И топать никуда не пришлось. С километр прошел всего и такую нычку почистил - неделю бухать толпой можно!",
"Не знаю чью схованку обобрал, но доволен! Старался ты, терпило вонючий, а дедушка взял и забрал. Потей дальше.",
"Хорошо пашешь, сталкер, да плохо прячешь! Порадовал старика, уродец. Поищи теперь свой хабар. Учись прятать у старших!"
}
-- сообщения о неудачном ограблении нычки
local tbl_poor = {
"Да, обмельчал нынче сталкер. Даже хабара нормального заначить не может! Плохо работаете, коллеги!",
"Кошмар! Нечем дедушке поживиться! Вы что, на голодную смерть меня приговорить решили? А ну, работать, голодранцы!",
"Вы чё, сталкеры?! Хотите, чтобы дедушка старый, больной, ревматический сам в Зону за хабаром отправился? Сделайте нычечку сладенькую. Угостите дедушку.",
"Не, ну вы совсем там схренели! Дедушка голодный и холодный! Где хабар нормальный? Я что, должен за вас собирать и по нычкам раскладывать?",
"Нет, молодежь, никакого у вас уважения к старости! Никакого сострадания! А ведь мы, старики, вас растили, кормили! Марш в ходку и хабар по нычкам! Жрать охота...",
"Раз, два, три, четыре, пять - я иду искать! Кто хабар хреново спрятал - я не виноват!",
"Неужели прятать хабар научились? Во, дела! Ничего, все равно найду и почищу под ноль.",
"Что-то не везет мне сегодня на нычки. Старею, видать... Но, не сомневайтесь - найду обязательно!",
"Ну, что ты будешь делать? Пустой сегодня в лагерь бреду. Ни одной нычки сладенькой не попалось.",
"Не свезло сегодня чужого хабара с нычки поднять. Ничего, отдохну, отосплюсь и завтра с новыми силами пойду крысятничать!"
}
local scan_max = 100 -- максимальное значение содержимого нычки
local scan_min = 50 -- минимальное значение содержимого нычки
local scan_step = 10	-- шаг изменения
-- поиск нычек
function scan_habar()
	local boxes = {}
	local sim = alife()
	local sobj, map, pobj
    for a=1,65535,1 do
		sobj=sim:object(a)
		if sobj and sobj.parent_id ~= nil then	-- если у объекта есть хозяин
			pobj = sim:object(sobj.parent_id)	-- получаем хозяина
			if pobj then
				if pobj:section_name()=="inventory_box" or pobj:section_name()=="treasure_item" or pobj:section_name()=="m_inventory_box" then
					-- проверка на локацию.
					if pobj.m_game_vertex_id and game_graph():valid_vertex_id(pobj.m_game_vertex_id) then
						map=sim:level_name(game_graph():vertex(pobj.m_game_vertex_id):level_id())	-- получаем имя уровня
						if map ~= level.name() then	-- если не на текущем уровне
							if not boxes[pobj.id] then	-- если еще нет ящика, то создадим его
								boxes[pobj.id] = {sobj.id}
							else
								table.insert(boxes[pobj.id],sobj.id)	-- иначе, вписывем объект в ящик
							end
						end
					end
				end	
			end
		end
    end
	-- ищем самый богатый ящик
	local box_id, max_item, count = 0, 0, 0
	if boxes then
		for k,v in pairs(boxes) do
			if boxes[k] then
				count = table.getn(boxes[k])	-- получаем количество предметов в ящике
				if count>Bor67_2 and count>max_item then
					box_id = k	-- запоминаем ид ящика
					max_item = count	-- запоминаем число предметов
				end
			end
		end
	end
	-- действия по результатам отбора
	local rnd_time = math.random(5,25)	-- время задержки смс
	if box_id>0 then	-- есть подходящий ящик
		local sms = tbl_good[math.random(table.getn(tbl_good))]	-- получили случайное сообщение
		news_manager.send_tip(db.actor, sms.." Дед Западло.", rnd_time, "stalker", nil)	-- отправляем сообщение
		-- чистим ящик
		local tmp = boxes[box_id]
		for b=1,table.getn(tmp) do
			sobj=sim:object(tmp[b])
			if sobj then
				sim:release(sobj,true)
			end
		end
		Bor67_2 = scan_max	-- восстанавливаем порог
	else	-- нет пригодного ящика
		local sms = tbl_poor[math.random(table.getn(tbl_poor))]	-- получили случайное сообщение
		news_manager.send_tip(db.actor, sms.." Дед Западло.", rnd_time, "stalker", nil)	-- отправляем сообщение
		Bor67_2 = Bor67_2 - scan_step	-- уменьшаем порог
		if Bor67_2 < scan_min then Bor67_2 = scan_min end	-- ограничиваем снижение порога
	end
end
-- установка таймера шмона
function set_scan_timer()
	math.randomseed (device ():time_global ())	-- улучшаем случайность
	amk.g_start_timer("scan_timer", 1, math.random(0,23), math.random(0,59))	-- не меньше суток и не больше двух
	if Bor67_2 == 0 then Bor67_2 = scan_max end	-- Начальная установка
end
--------------------------------------------------------------------
-- Сохранение/загрузка параметров
--------------------------------------------------------------------
function save(p)
	p:w_u8(GlukCount_1)
	p:w_u8(GlukCount_2)
	p:w_u8(GlukCount_3)
	p:w_u8(GlukCount_4)
	p:w_u8(GlukCount_5)
	p:w_u16(DrinkCount)
	p:w_u16(InfectCount)
	p:w_u16(Bor67_1)	-- Время действия вакцины
	p:w_u16(Bor67_2)	-- Порог срабатывания
	p:w_u16(Bor67_3)	-- reserved
end
--------------------------------------------------------------------
function load(r)
	GlukCount_1 = r:r_u8()
	GlukCount_2 = r:r_u8()
	GlukCount_3 = r:r_u8()
	GlukCount_4 = r:r_u8()
	GlukCount_5 = r:r_u8()
	DrinkCount = r:r_u16()
	InfectCount = r:r_u16()
	Bor67_1 = r:r_u16()	-- Время действия вакцины
	Bor67_2 = r:r_u16()	-- Порог срабатывания
	Bor67_3 = r:r_u16()	-- reserved
end
--------------------------------------------------------------------
-- Трое друзей Бритого
-- первый друг 
function have_1()	-- Эдик
	if has_alife_info("info_target21") and not has_alife_info("britiy_has_1") then return true end
	return false
end
-- второй друг 
function have_2()	-- Грек
	if has_alife_info("info_target81") and not has_alife_info("britiy_has_2") then return true end
	return false
end
-- третий друг 
function have_3()	-- Бром
	if has_alife_info("info_target31") and not has_alife_info("britiy_has_3") then return true end
	return false
end
-- нет друзей
function have_nothing()
	return not have_1() and not have_2() and not have_3()
end
-- есть друзья и фотик
function searh_friend()
	local actor = db.actor
	return (not has_alife_info("britiy_has_1") or not has_alife_info("britiy_has_2") or not has_alife_info("britiy_has_3")) and (actor:object("wpn_foto") ~= nil or actor:object("wpn_foto1") ~= nil)
end
--приз 1
function priz1()
	local sobj=alife():create("repbox_s1", db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
end
--приз 2
function priz2()
	local sobj=alife():create("repbox_s2", db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
end
--приз 3
function priz3()
	local sobj=alife():create("repbox_s6", db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
end
-- Награда от Дзяо--------------------------------------------------
local count_fotos = 0
-- проверка, сколько ГГ сдал фоток для газеты
function check_fotos()
	local info
	local actor = db.actor
	count_fotos = 0
	-- подсчитываем количество отснятых перцев
	for a=1,100,1 do
		info = "info_target"..tostring(a)
		if has_alife_info(info) then count_fotos = count_fotos + 1 end
	end
	-- проверяем остаток в инвентаре
	actor:iterate_inventory(find_items, actor)	-- перебираем инвентарь ГГ
	return count_fotos>=50
end
function find_items(actor, item)
    if item:section()=="foto_news" then count_fotos = count_fotos - 1 end
end
-- получение награды
function get_priz()
	local sobj=alife():create("medalka", db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
end
-- Воронин и немцы--------------------------------------------------
-- не отснял никого
function gans_nothing()
	local info
	count_fotos = 0
	for a=85,91,1 do
		info = "info_target"..tostring(a)
		if has_alife_info(info) then count_fotos = count_fotos + 1 end	
	end
	return count_fotos == 0
end
-- отснял всех
function gans_all()
	local info
	count_fotos = 0
	for a=85,91,1 do
		info = "info_target"..tostring(a)
		if has_alife_info(info) then count_fotos = count_fotos + 1 end	
	end
	return count_fotos == 7
end
-- отснял командование
function gans_comand()
	local info
	count_fotos = 0
	for a=85,88,1 do
		info = "info_target"..tostring(a)
		if has_alife_info(info) then count_fotos = count_fotos + 1 end	
	end
	return count_fotos == 4 and not gans_all()
end
-- хоть кого-то отснял
function gans_foto()
	local info
	count_fotos = 0
	for a=85,91,1 do
		info = "info_target"..tostring(a)
		if has_alife_info(info) then count_fotos = count_fotos + 1 end	
	end
	return count_fotos > 0 and not gans_all() and not gans_comand()
end
-- получение награды
function voronin_priz()
	local sobj=alife():create("wpn_ak47_m", db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
	for a=1,5,1 do
		sobj=alife():create("ammo_7.62x39_fmj", db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
	end
end

--------------------------------------------------------------------
-- Отладочные функции
-- Вывод на экран счетчика заражения
function debug_zaraza()
	news_manager.send_tip(db.actor, "Уровень заражения "..tostring(InfectCount), nil, nil, 30000)
	news_manager.send_tip(db.actor, "Уровень вакцины "..tostring(Bor67_1), nil, nil, 30000)
end
-- Вывод на экран счетчика жажды
function debug_drink()
	news_manager.send_tip(db.actor, "Уровень жажды "..tostring(DrinkCount), nil, nil, 30000)
end
-- Вывод на экран счетчика вакцины
function debug_vacsina()
	news_manager.send_tip(db.actor, "Уровень вакцины "..tostring(Bor67_1), nil, nil, 30000)
end